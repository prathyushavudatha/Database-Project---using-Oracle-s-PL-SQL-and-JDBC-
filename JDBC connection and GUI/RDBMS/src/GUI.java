
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import oracle.jdbc.OracleTypes;
import oracle.jdbc.pool.OracleDataSource;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.*;


public class GUI extends javax.swing.JFrame {
    /**
     * Creates new form GUI
     */
    
    String result = "";
    StringBuilder res = new StringBuilder(); 
    

      
    
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnShowStudents = new javax.swing.JButton();
        btnShowTas = new javax.swing.JButton();
        btnShowCourses = new javax.swing.JButton();
        btnShowClasses = new javax.swing.JButton();
        btnShowEnrolllments = new javax.swing.JButton();
        btnShowPrerequisities = new javax.swing.JButton();
        btnShowLogs = new javax.swing.JButton();
        LableRDBMS = new javax.swing.JLabel();
        labelSelectedData = new javax.swing.JLabel();
        Q5 = new javax.swing.JButton();
        btnques4 = new javax.swing.JButton();
        btnDropStudent = new javax.swing.JButton();
        btnDeleteStudent = new javax.swing.JButton();
        msgbox = new javax.swing.JLabel();
        Q3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnShowStudents.setText("Show Students");
        btnShowStudents.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowStudentsActionPerformed(evt);
            }
        });

        btnShowTas.setText("Show Tas");
        btnShowTas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowTas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowTasActionPerformed(evt);
            }
        });

        btnShowCourses.setText("Show courses");
        btnShowCourses.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowCoursesActionPerformed(evt);
            }
        });

        btnShowClasses.setText("Show Classes");
        btnShowClasses.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowClassesActionPerformed(evt);
            }
        });

        btnShowEnrolllments.setText("Show Enrollments");
        btnShowEnrolllments.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowEnrolllments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEnrolllmentsActionPerformed(evt);
            }
        });

        btnShowPrerequisities.setText("Show Prerequisities");
        btnShowPrerequisities.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowPrerequisities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPrerequisitiesActionPerformed(evt);
            }
        });

        btnShowLogs.setText("Show Logs");
        btnShowLogs.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnShowLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowLogsActionPerformed(evt);
            }
        });

        LableRDBMS.setText("                                                                                        RDBMS");
        LableRDBMS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelSelectedData.setText("           SELECTED DATA:-");

        Q5.setText("Enroll Student");
        Q5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Q5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q5ActionPerformed(evt);
            }
        });

        btnques4.setText("Prerequisite Courses");
        btnques4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnques4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnques4ActionPerformed(evt);
            }
        });

        btnDropStudent.setText("Drop Student");
        btnDropStudent.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnDropStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropStudentActionPerformed(evt);
            }
        });

        btnDeleteStudent.setText("Delete Student");
        btnDeleteStudent.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStudentActionPerformed(evt);
            }
        });

        msgbox.setBorder(new javax.swing.border.MatteBorder(null));

        Q3.setText("TA Details");
        Q3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(LableRDBMS, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(labelSelectedData, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnShowStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowTas, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowEnrolllments, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowPrerequisities, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(msgbox, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Q5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDropStudent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnques4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(LableRDBMS, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(labelSelectedData)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnShowStudents)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowTas)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowCourses)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowClasses)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowEnrolllments)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowPrerequisities)
                        .addGap(25, 25, 25)
                        .addComponent(btnShowLogs))
                    .addComponent(msgbox, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnques4)
                        .addGap(34, 34, 34)
                        .addComponent(btnDropStudent)
                        .addGap(34, 34, 34)
                        .addComponent(btnDeleteStudent)
                        .addGap(36, 36, 36)
                        .addComponent(Q5)
                        .addGap(31, 31, 31)
                        .addComponent(Q3))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowStudentsActionPerformed
        // TODO add your handling code here:
        try
    {
                        //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_students(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         System.out.print (rset.getString (4)+"  ");
         System.out.print (rset.getString (5)+"  ");
         System.out.println (rset.getString (6)+"  ");
         System.out.println (rset.getString (7)+"  ");
         System.out.println (rset.getString (8)+"  ");
         
         
         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append(rset.getString (4)+"  ");
         res.append(rset.getString (5)+"  ");
         res.append(rset.getString (6)+"  ");
         res.append(rset.getString (7)+"  ");
         res.append(rset.getString (8)+"  ");
         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);
    }
    catch (SQLException e) { e.printStackTrace(System.out);}
     catch (Exception e) {System.out.println (e);}
    

    }//GEN-LAST:event_btnShowStudentsActionPerformed

    private void btnShowTasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowTasActionPerformed
        // TODO add your handling code here:
        
        try
        {
                       //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_tas(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);

            //close the result set, statement, and the connection
            cs.close();
            conn.close();
            }
            catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
            catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n");}
  
        
    }//GEN-LAST:event_btnShowTasActionPerformed

    private void btnShowCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowCoursesActionPerformed
        
        try
        {

            //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");

            //Prepare to call stored procedure:
            CallableStatement cs = conn.prepareCall("begin dbproject2.show_courses(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);

            //close the result set, statement, and the connection
            cs.close();
            conn.close();
            }
            catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
            catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n");}
        
        
    }//GEN-LAST:event_btnShowCoursesActionPerformed

    private void btnShowClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowClassesActionPerformed
        // TODO add your handling code here:
                try
    {

                   //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
           Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_classes(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
            
            
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         System.out.print (rset.getString (4)+"  ");
         System.out.print (rset.getString (5)+"  ");
         System.out.println (rset.getString (6)+"  ");
         System.out.println (rset.getString (7)+"  ");
         System.out.println (rset.getString (8)+"  ");
         System.out.println (rset.getString (9)+"  ");
         System.out.println (rset.getString (10)+"  ");
         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append(rset.getString (4)+"  ");
         res.append(rset.getString (5)+"  ");
         res.append(rset.getString (6)+"  ");
         res.append(rset.getString (7)+"  ");
         res.append(rset.getString (8)+"  ");
         res.append(rset.getString (9)+"  ");
         res.append(rset.getString (10)+"  ");
         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);
    }
    catch (SQLException e) { e.printStackTrace(System.out);}
     catch (Exception e) {System.out.println (e);}
    
    }//GEN-LAST:event_btnShowClassesActionPerformed

    private void btnShowEnrolllmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEnrolllmentsActionPerformed
        // TODO add your handling code here:
                      try
    {

              //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_enrollments(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");

         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");

         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);
    }
    catch (SQLException e) { e.printStackTrace(System.out);}
     catch (Exception e) {System.out.println (e);}  
    }//GEN-LAST:event_btnShowEnrolllmentsActionPerformed

    private void btnShowPrerequisitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPrerequisitiesActionPerformed
        // TODO add your handling code here:
                    try
    {

      
              //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_prerequisites(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         System.out.print (rset.getString (4)+"  ");

         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append(rset.getString (4)+"  ");

         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);
    }
    catch (SQLException e) { e.printStackTrace(System.out);}
     catch (Exception e) {System.out.println (e);}

    }//GEN-LAST:event_btnShowPrerequisitiesActionPerformed

    private void btnShowLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowLogsActionPerformed
        // TODO add your handling code here:
                            try
    {

     
      
              //Connecting to Oracle server. 
            OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
            ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:acad111");
            Connection conn = ds.getConnection("asaraka1, "Aafemh14");


            //Prepare to call stored procedure:
           CallableStatement cs = conn.prepareCall("begin dbproject2.show_logs(?); end;");
            //register the out parameter (the first parameter)
            cs.registerOutParameter(1, OracleTypes.CURSOR);

            // Input gpg threshold from keyboard
            
            /*Double tgpa = Double.parseDouble("2.5");
            cs.setDouble(2, tgpa);*/
            


            // execute and retrieve the result set
            cs.execute();
            ResultSet rset = (ResultSet)cs.getObject(1);

            // print the results
            res.append("<html><br>");
      // Print
      while (rset.next ()) {
         System.out.print (rset.getString (1)+"  ");
         System.out.print (rset.getString (2)+"  ");
         System.out.print (rset.getString (3)+"  ");
         System.out.print (rset.getString (4)+"  ");
         System.out.print (rset.getString (5)+"  ");
         System.out.println (rset.getString (6)+"  ");
         
         res.append(rset.getString (1)+"  ");
         res.append(rset.getString (2)+"  ");
         res.append(rset.getString (3)+"  ");
         res.append(rset.getString (4)+"  ");
         res.append(rset.getString (5)+"  ");
         res.append(rset.getString (6)+"  ");
         res.append("<br>");
         
      }
      
      res.append("</html>");
      result= res.toString();
      msgbox.setText(result);
    }
    catch (SQLException e) { e.printStackTrace(System.out);}
     catch (Exception e) {System.out.println (e);}

    }//GEN-LAST:event_btnShowLogsActionPerformed

    private void btnques4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnques4ActionPerformed
        // TODO add your handling code here:
            
        try
    {


        OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
        ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:ACAD111");
        Connection conn = ds.getConnection("asaraka1", "Aafemh14");

        // Input sid from keyboard
        //BufferedReader  readKeyBoard;
       // String     sid;
       // String dept_co;
       // int courseNo;
        //textInputMsg.setText("Please Enter dept_code and Course# below:");
         //dept_code = Getinput1.getText();
         //courseNo = getinput2.getText();
        //(Number)rateField.getValue()
        //sid = readKeyBoard.readLine();
        
        // Input sid from keyboard
        BufferedReader  readKeyBoard;
        String dept_co;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter dept_code:");
        dept_co = readKeyBoard.readLine();
        
       
        int courseNo;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter course#:");
        courseNo = Integer.parseInt(readKeyBoard.readLine());


        CallableStatement cs = conn.prepareCall("begin proj2q4.show_prereq(:1,:2,:3); end;");

        //set the in parameter (the first parameter)
        cs.setString(1, dept_co);
        cs.setInt(2, courseNo);

        //register the out parameter (the second parameter)
        cs.registerOutParameter(3, Types.VARCHAR);

        //execute the stored procedure
        cs.executeQuery();

        //get the out parameter result.
        String status = cs.getString(3);
        System.out.println( dept_co + "and " + courseNo + " : "+status);

        //close the result set, statement, and the connection
        cs.close();
        conn.close();
   }
   catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
   catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n" + e.getMessage());}
        
    }//GEN-LAST:event_btnques4ActionPerformed

    private void Q5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q5ActionPerformed
        // TODO add your handling code here:
        
        try
        {
        
        OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
        ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:ACAD111");
        Connection conn = ds.getConnection("asaraka1", "Aafemh14");
        
        BufferedReader  readKeyBoard;
        String bnum;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter B#:");
        bnum = readKeyBoard.readLine();
        
        String classid;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter classid:");
        classid = readKeyBoard.readLine();


        CallableStatement cs = conn.prepareCall("begin proj2q5.enroll_student(:1,:2,:3); end;");
        
        //

        //set the in parameter (the first parameter)
        cs.setString(1, bnum);
        cs.setString(2, classid);

        //register the out parameter (the second parameter)
        cs.registerOutParameter(3, Types.VARCHAR);

        //execute the stored procedure
        cs.executeQuery();

        //get the out parameter result.
        String status = cs.getString(3);
        System.out.println( bnum + "and " + classid  + " : "+status);

        //close the result set, statement, and the connection
        cs.close();
        conn.close();
           }
   catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
   catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n" + e.getMessage());}
     
        
    }//GEN-LAST:event_Q5ActionPerformed

    private void btnDropStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropStudentActionPerformed
        // TODO add your handling code here5
        try
        {
        
        OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
        ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:ACAD111");
        Connection conn = ds.getConnection("asaraka1", "Aafemh14");
        
        BufferedReader  readKeyBoard;
        String bnum;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter B#:");
        bnum = readKeyBoard.readLine();
        
        String classid;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter classid:");
        classid = readKeyBoard.readLine();


        CallableStatement cs = conn.prepareCall("begin proj2q6.drop_class(:1,:2,:3); end;");
        
        //

        //set the in parameter (the first parameter)
        cs.setString(1, bnum);
        cs.setString(2, classid);

        //register the out parameter (the second parameter)
        cs.registerOutParameter(3, Types.VARCHAR);

        //execute the stored procedure
        cs.executeQuery();

        //get the out parameter result.
        String status = cs.getString(3);
        System.out.println( bnum + "and " + classid  + " : "+status);

        //close the result set, statement, and the connection
        cs.close();
        conn.close();
           }
   catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
   catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n" + e.getMessage());}
     
    }//GEN-LAST:event_btnDropStudentActionPerformed

    private void btnDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStudentActionPerformed
        // TODO add your handling code here:
        
                try
        {
        
        OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
        ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:ACAD111");
        Connection conn = ds.getConnection("asaraka1", "Aafemh14");
        
        BufferedReader  readKeyBoard;
        String bnum;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter B#:");
        bnum = readKeyBoard.readLine();
       
        CallableStatement cs = conn.prepareCall("begin proj2q7.delete_student(:1,:2); end;");
        
        //

        //set the in parameter (the first parameter)
        cs.setString(1, bnum);
        

        //register the out parameter (the second parameter)
        cs.registerOutParameter(2, Types.VARCHAR);

        //execute the stored procedure
        cs.executeQuery();

        //get the out parameter result.
        String status = cs.getString(2);
        System.out.println( bnum + "and "  + " : "+status);

        //close the result set, statement, and the connection
        cs.close();
        conn.close();
           }
   catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
   catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n" + e.getMessage());}
    }//GEN-LAST:event_btnDeleteStudentActionPerformed

    private void Q3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q3ActionPerformed
        // TODO add your handling code here:
        try
        {
        
        OracleDataSource ds = new oracle.jdbc.pool.OracleDataSource();
        ds.setURL("jdbc:oracle:thin:@castor.cc.binghamton.edu:1521:ACAD111");
        Connection conn = ds.getConnection("asaraka1", "Aafemh14");
        
        BufferedReader  readKeyBoard;        
        String classid;
        readKeyBoard = new BufferedReader(new InputStreamReader(System.in));
        System.out.print("Please Enter classid:");
        classid = readKeyBoard.readLine();


        CallableStatement cs = conn.prepareCall("begin proj2_package.show_ta(:1,:2); end;");
        
        //

        //set the in parameter (the first parameter)
       
        cs.setString(1, classid);

        //register the out parameter (the second parameter)
        cs.registerOutParameter(2, Types.VARCHAR);

        //execute the stored procedure
        cs.executeQuery();

        //get the out parameter result.
        String status = cs.getString(2);
        System.out.println(  classid  + " : "+status);

        //close the result set, statement, and the connection
        cs.close();
        conn.close();
           }
   catch (SQLException ex) { System.out.println ("\n*** SQLException caught ***\n" + ex.getMessage());}
   catch (Exception e) {System.out.println ("\n*** other Exception caught ***\n" + e.getMessage());}
     
          
        
    }//GEN-LAST:event_Q3ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LableRDBMS;
    private javax.swing.JButton Q3;
    private javax.swing.JButton Q5;
    private javax.swing.JButton btnDeleteStudent;
    private javax.swing.JButton btnDropStudent;
    private javax.swing.JButton btnShowClasses;
    private javax.swing.JButton btnShowCourses;
    private javax.swing.JButton btnShowEnrolllments;
    private javax.swing.JButton btnShowLogs;
    private javax.swing.JButton btnShowPrerequisities;
    private javax.swing.JButton btnShowStudents;
    private javax.swing.JButton btnShowTas;
    private javax.swing.JButton btnques4;
    private javax.swing.JLabel labelSelectedData;
    private javax.swing.JLabel msgbox;
    // End of variables declaration//GEN-END:variables
}
